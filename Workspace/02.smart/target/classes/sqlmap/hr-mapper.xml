<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hr">

<!-- 신규사원정보 등록 -->
<insert id="insert">
insert into employees (employee_id, last_name, first_name, email, phone_number
						, salary, hire_date, job_id, department_id)
values (employees_seq.nextval, #{last_name}, #{first_name}, #{email}, #{phone_number}
						, #{salary}, #{hire_date}, #{job_id},
						<choose><when test="department_id == -1">null</when>
								<otherwise>#{department_id}</otherwise>
						</choose> 
		)						
</insert>

<!-- 사원정보 삭제 -->
<delete id="delete">
delete from employees where employee_id = #{employee_id} 
</delete>


<!-- 사원정보 변경저장 -->
<update id="update">
update employees 
set last_name = #{last_name}, first_name = #{first_name}, email = #{email}
	, phone_number = #{phone_number}, salary = #{salary}, hire_date = #{hire_date}
	, job_id = #{job_id}
	<if test="department_id == -1">, department_id = null</if>
	<if test="department_id != -1">, department_id = #{department_id}</if>
where employee_id = #{employee_id}	
</update>

<!-- 회사의 전체 부서목록 조회 -->
<select id="departmentList" resultType="smart.hr.DepartmentVO">
select * from departments order by department_name
</select>
<!-- 회사의 전체 업무목록 조회 -->
<select id="jobList" resultType="smart.hr.JobVO">
select * from jobs order by job_title
</select>


<!-- 사원이 소속된 부서목록 조회 -->
<select id="employeeDepartmentList" resultType="smart.hr.DepartmentVO">
select distinct department_id, nvl(department_name, '소속없음') department_name
from employees e left outer join departments d using(department_id)
</select>

<!-- 특정 사번의 사원정보 조회 -->
<select id="info" resultType="smart.hr.EmployeeVO">
select last_name || ' ' || first_name name, job_title, department_name, e.*
from employees e inner join jobs j on e.job_id = j.job_id
left outer join departments d on d.department_id = e.department_id
where employee_id = #{employee_id}
</select>


<!-- 전체 사원정보 조회 -->
<select id="list" resultType="smart.hr.EmployeeVO">
select employee_id, last_name||' '||first_name name, e.department_id, department_name
        , job_id, job_title, hire_date
from departments d right outer join employees e on e.department_id=d.department_id
inner join jobs j using(job_id)
<if test="department_id == 0">
where e.department_id is null
</if>
<if test="department_id > 0">
where e.department_id = #{department_id} 
</if>
order by employee_id
</select>

</mapper>